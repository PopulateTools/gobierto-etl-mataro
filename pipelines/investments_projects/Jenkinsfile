email = "popu-servers+jenkins@populate.tools "
pipeline {
    agent any
    environment {
        PATH = "$HOME/.rbenv/shims:$PATH"
        GOBIERTO_ETL_UTILS = "/var/www/gobierto-etl-utils/current/"
        MATARO_ETL = "/var/www/gobierto-etl-mataro/current/"
        WORKING_DIR = "/tmp/mataro_investments"
        MATARO_ID="8121"
        // Variables that must be defined via Jenkins UI:
        // GOBIERTO = "/var/www/gobierto/current"
        // API_HOST = "https://mataro.gobify.net"
        // ATTACHMENTS_COLLECTION_ID = "2026"
    }
    stages {
        stage('Clean working dir') {
          steps {
              sh "rm -rf ${WORKING_DIR}"
          }
        }
        stage('Extract > Download data sources - Projects index') {
            steps {
                sh "cd ${GOBIERTO_ETL_UTILS}; ruby operations/api-download/run.rb --source-url 'https://aplicacions.mataro.org:444/apex/rest/sigmav2/llistaobres2' --output-file ${WORKING_DIR}/llistaobres.json"
            }
        }
        stage('Extract > Download data sources - API resources') {
            steps {
              sh '''#!/bin/bash
                source ${ETL}/.rbenv-vars;
                cd ${GOBIERTO_ETL_UTILS};
                ruby operations/api-download/run.rb --source-url '${API_HOST}/gobierto_investments/api/v1/projects/meta' --output-file ${WORKING_DIR}/meta.json --bearer-token $API_TOKEN;
                ruby operations/api-download/run.rb --source-url '${API_HOST}/gobierto_investments/api/v1/projects/new' --output-file ${WORKING_DIR}/new.json --bearer-token $API_TOKEN
              '''
            }
        }
        stage('Extract > Extract external ids of projects') {
            steps {
                sh "cd ${MATARO_ETL}; ruby operations/gobierto_investments/extract-projects-external-ids-and-extra-data/run.rb ${WORKING_DIR}/llistaobres.json ${WORKING_DIR}/external_ids.txt ${WORKING_DIR}/projects_extra_data.json"
            }
        }
        stage('Extract > Download data sources - Individual projects') {
            steps {
                sh "for i in \$(cat ${WORKING_DIR}/external_ids.txt) ; do cd ${GOBIERTO_ETL_UTILS}; ruby operations/api-download/run.rb --source-url \"https://aplicacions.mataro.org:444/apex/rest/sigmav2/detallobre2/\$i\" --output-file ${WORKING_DIR}/downloaded_projects/\$i.json; done"
            }
        }
        stage('Transform > Transform data') {
            steps {
                sh "cd ${MATARO_ETL}; ruby operations/gobierto_investments/transform-projects/run.rb ${WORKING_DIR}/external_ids.txt ${WORKING_DIR}/meta.json ${WORKING_DIR}/projects_extra_data.json ${WORKING_DIR}/new.json ${WORKING_DIR}/downloaded_projects/ ${WORKING_DIR}/transformed_projects/ ${API_HOST} ${ATTACHMENTS_COLLECTION_ID}"
            }
        }
        stage('Load > Send create/update data and deletions to API') {
            steps {
                sh "cd ${MATARO_ETL}; ruby operations/gobierto_investments/load-projects/run.rb ${WORKING_DIR}/external_ids.txt ${WORKING_DIR}/transformed_projects/ ${API_HOST}"
                sh "cd ${MATARO_ETL}; ruby operations/gobierto_investments/delete-projects/run.rb ${WORKING_DIR}/external_ids.txt ${API_HOST}"
            }
        }
        stage('Load > Publish activity') {
            steps {
                sh "echo '8121' > ${WORKING_DIR}/organization.id.txt"
                sh "cd ${GOBIERTO}; bin/rails runner ${GOBIERTO_ETL_UTILS}/operations/gobierto/publish-activity/run.rb investments_projects_updated ${WORKING_DIR}/organization.id.txt"
            }
        }
        stage('Clear cache') {
            steps {
                sh "cd ${GOBIERTO}; bin/rails runner ${GOBIERTO_ETL_UTILS}/operations/gobierto/clear-cache/run.rb"
            }
        }
    }
    post {
        failure {
            echo 'This will run only if failed'
            mail body: "Project: ${env.JOB_NAME} - Build Number: ${env.BUILD_NUMBER} - URL de build: ${env.BUILD_URL}",
                charset: 'UTF-8',
                subject: "ERROR CI: Project name -> ${env.JOB_NAME}",
                to: email
        }
    }
}
